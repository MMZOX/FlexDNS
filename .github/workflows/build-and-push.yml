name: Build and Push Cloud DNS Image

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      registry_choice:
        description: 'Registry to push to (dockerhub or ghcr)'
        required: false
        default: 'dockerhub'
      image_name:
        description: 'Image name (without registry prefix)'
        required: false
        default: 'flexdns'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      REGISTRY_CHOICE: ${{ github.event.inputs.registry_choice || 'dockerhub' }}
      IMAGE_NAME: ${{ github.event.inputs.image_name || 'flexdns' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Choose one of the following registry login methods based on where you want to push the image

    # Option 1: Login to Docker Hub
    - name: Login to Docker Hub
      if: env.REGISTRY_CHOICE == 'dockerhub' || env.REGISTRY_CHOICE == ''
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Debug step to verify login
      id: docker_login

    # Option 2: Login to GitHub Container Registry
    - name: Login to GitHub Container Registry
      if: env.REGISTRY_CHOICE == 'ghcr'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set image name based on registry
      id: image_name
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      run: |
        if [[ "${{ env.REGISTRY_CHOICE }}" == "ghcr" ]]; then
          # For GitHub Container Registry
          IMAGE_VALUE="ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}"
          echo "Setting image name to: $IMAGE_VALUE"
          echo "IMAGE=$IMAGE_VALUE" >> "$GITHUB_OUTPUT"
        else
          # For Docker Hub, use the organization/username from secrets if available
          if [[ -n "$DOCKER_USERNAME" ]]; then
            IMAGE_VALUE="$DOCKER_USERNAME/${{ env.IMAGE_NAME }}"
            echo "Using Docker Hub username from secrets: $DOCKER_USERNAME"
          else
            IMAGE_VALUE="${{ github.repository_owner }}/${{ env.IMAGE_NAME }}"
            echo "No Docker Hub username found in secrets, using repository owner"
          fi
          echo "Setting image name to: $IMAGE_VALUE"
          echo "IMAGE=$IMAGE_VALUE" >> "$GITHUB_OUTPUT"
        fi

        # Verify the output was set correctly
        cat "$GITHUB_OUTPUT"

    - name: Debug image name
      run: |
        echo "Image name: ${{ steps.image_name.outputs.IMAGE }}"
        echo "Registry choice: ${{ env.REGISTRY_CHOICE }}"

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ steps.image_name.outputs.IMAGE }}
        tags: |
          type=semver,pattern={{version}}
          type=ref,event=branch
          type=ref,event=pr
          type=sha,format=short
          latest

    - name: Verify Docker Hub access
      if: env.REGISTRY_CHOICE == 'dockerhub' || env.REGISTRY_CHOICE == ''
      run: |
        # Check if we can access Docker Hub
        docker info
        # List available tags for the image if it exists
        echo "Checking access to repository: ${{ steps.image_name.outputs.IMAGE }}"
        # This command will fail if the repository doesn't exist or we don't have access
        docker pull ${{ steps.image_name.outputs.IMAGE }}:latest || echo "Repository may not exist yet or we don't have access"

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Image digest
      run: echo ${{ steps.build-and-push.outputs.digest }}
